{"version":3,"sources":["webpack:///./src/components/Editor/Editor_Side/Side_MainList.vue?d17a","webpack:///src/components/Editor/Editor_Side/Side_MainList.vue","webpack:///./src/components/Editor/Editor_Side/Side_MainList.vue?fa9c","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///./src/components/Editor/Editor_Side/Side_MainList.vue?7d27","webpack:///./src/components/Editor/Editor_Side/Side_MainList.vue?596b","webpack:///./src/components/Editor/Editor_Side/Side_MainList.vue?49cc"],"names":["_vm","this","_h","$createElement","_c","_self","staticClass","attrs","model","value","callback","$$v","opendpanel","expression","_l","item","i","key","scopedSlots","_u","fn","_v","proxy","_s","panelTitle","componentName","tag","user_data","staticRenderFns","components","Splitpanes","Pane","AssignTree","Explain","LectureTree","props","data","created","idx","mixins","name","disabled","readonly","Boolean","content","header","nextIsActive","computed","classes","groupClasses","isDisabled","expansionPanels","isReadonly","methods","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","onClick","e","toggle","isBooted","render","h","class","String","baseMixins","isActive","expansionPanel","beforeDestroy","showLazyContent","directives","ripple","disableIconRotate","expandIcon","type","default","hideActions","hasMousedown","genIcon","icon","VIcon","setBackgroundColor","tabindex","on","click","mousedown","mouseup","open","provide","accordion","flat","hover","focusable","inset","popout","tile","$attrs","hasOwnProperty","Array","length","updateItem","getValue","nextValue","index","toggleMethod","component","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels"],"mappings":"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","file":"js/chunk-f7e26770.7147e4e5.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('v-expansion-panels',{staticClass:\"wrap\",attrs:{\"multiple\":\"\",\"accordion\":\"\",\"tile\":\"\"},model:{value:(_vm.opendpanel),callback:function ($$v) {_vm.opendpanel=$$v},expression:\"opendpanel\"}},_vm._l((_vm.panels),function(item,i){return _c('v-expansion-panel',{key:i},[_c('v-expansion-panel-header',{staticClass:\"white--text\",attrs:{\"color\":\"#252526\"},scopedSlots:_vm._u([{key:\"actions\",fn:function(){return [_c('v-icon',{attrs:{\"color\":\"white\",\"size\":\"13pt\"}},[_vm._v(\"$expand\")])]},proxy:true}],null,true)},[_vm._v(\" \"+_vm._s(item.panelTitle)+\" \")]),_c('v-expansion-panel-content',{attrs:{\"color\":\"#252526\"}},[_c(item.componentName,{tag:\"component\",staticClass:\"white--text\",attrs:{\"user_data\":_vm.user_data}})],1)],1)}),1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <v-expansion-panels v-model=\"opendpanel\" multiple accordion tile class=\"wrap\">\n      <v-expansion-panel v-for=\"(item, i) in panels\" :key=\"i\" >\n        <v-expansion-panel-header color=\"#252526\" class=\"white--text\">\n          {{ item.panelTitle }}\n          <template v-slot:actions>\n            <v-icon color=\"white\" size=\"13pt\">$expand</v-icon>\n          </template>\n        </v-expansion-panel-header>\n\n        <v-expansion-panel-content color=\"#252526\">\n          <component class=\"white--text\" :is=\"item.componentName\" :user_data=\"user_data\"></component>\n        </v-expansion-panel-content>\n      </v-expansion-panel>\n    </v-expansion-panels>\n  </div>\n</template>\n\n<script>\nimport { eventBus } from \"@/main.js\";\nimport { Splitpanes, Pane } from \"splitpanes\";\n\nexport default {\n  components: {\n    Splitpanes,\n    Pane,\n    AssignTree: () => import(\"@/components/Editor/Editor_Side/Side_AssignTree\"),\n    Explain: () => import(\"@/components/Editor/Editor_Side/Side_explain\"),\n    LectureTree: () => import(\"@/components/Editor/Editor_Side/Side_LectureTree\"),\n  },\n  props: [\"user_data\"],\n  data: () => ({\n    opendpanel: [0, 1, 2],\n    panels: [\n      { panelTitle: \"Lectures\", componentName: \"LectureTree\" },\n      { panelTitle: \"Assignments\", componentName: \"AssignTree\" },\n      { panelTitle: \"Explanation\", componentName: \"Explain\" },\n    ],\n  }),\n\n  created() {\n    eventBus.$on(\"OpenExplain\", (item, type) => {\n      // if (this.opendpanel.find((num) => num == 2) == null) {\n      //   this.opendpanel.push(2);\n      // }\n      if (!this.opendpanel.some((el) => el == 2)) {\n        this.opendpanel.push(2);\n      }\n      const idx = this.opendpanel.indexOf(type);\n      if (idx > -1) this.opendpanel.splice(idx, 1);\n    });\n  },\n};\n</script>\n\n<style scoped>\nv-expansion-panel {\n  color: white;\n}\n\n</style>\n\n<style>\n\n.panel_text{\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n\n}\n</style>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Side_MainList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Side_MainList.vue?vue&type=script&lang=js&\"","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","import { render, staticRenderFns } from \"./Side_MainList.vue?vue&type=template&id=524fb82e&scoped=true&\"\nimport script from \"./Side_MainList.vue?vue&type=script&lang=js&\"\nexport * from \"./Side_MainList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Side_MainList.vue?vue&type=style&index=0&id=524fb82e&scoped=true&lang=css&\"\nimport style1 from \"./Side_MainList.vue?vue&type=style&index=1&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"524fb82e\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\ninstallComponents(component, {VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VIcon})\n","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Side_MainList.vue?vue&type=style&index=0&id=524fb82e&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Side_MainList.vue?vue&type=style&index=0&id=524fb82e&scoped=true&lang=css&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Side_MainList.vue?vue&type=style&index=1&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Side_MainList.vue?vue&type=style&index=1&lang=css&\""],"sourceRoot":""}